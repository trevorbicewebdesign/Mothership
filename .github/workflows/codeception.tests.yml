name: Run Mothership Tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Start Docker Services
        run: docker compose up -d --build

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite: [acceptance, functional, api, integration]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Rename .env.sample to .env
        run: |
          mv ./tests/.env.sample ./tests/.env

      - name: Start Docker Services
        run: docker compose up -d --build

      - name: Wait for Database to be ready
        run: |
          echo "Waiting for Database..."
          until docker compose exec db mysqladmin ping -h "localhost" --silent; do
            echo "Still waiting for MySQL server to start..."
            sleep 5
          done
          echo "MySQL server is up."

          echo "Waiting for Joomla Database..."
          until docker compose exec db mysql -uroot -proot -e "USE local"; do
            echo "Still waiting for Joomla database to be ready..."
            sleep 5
          done
          echo "Joomla Database is ready."

      - name: Wait for Joomla Web to be ready
        run: |
          echo "Waiting for Joomla Web..."
          until curl --fail --silent --output /dev/null http://localhost:8080; do
            echo "Still waiting for Joomla Web..."
            sleep 5
          done
          echo "Joomla Web is ready."

      - name: Discover & Install Mothership via CLI
        run: |
          docker compose exec joomla bash -lc "\
            cd /var/www/html && \
            export HTTP_HOST=localhost:8080 && \
            php cli/joomla.php extension:discover --verbose && \
            php cli/joomla.php extension:discover:install --verbose\
          "

      - name: Export Database
        run: |
          docker compose exec db sh -c "mysqldump -uroot -proot --no-tablespaces --skip-comments --extended-insert=false local" | docker compose exec -T joomla sh -c "cat > /var/www/html/tests/_support/Data/db/dump.sql"

      - name: Run Codeception Tests for ${{ matrix.suite }}
        run: |
          docker compose exec joomla sh -c "/var/www/html/vendor/bin/codecept run ${{ matrix.suite }} -d -f"

      - name: Teardown
        if: always()
        run: docker compose down -v
