name: Run Mothership Tests

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.image-tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Image Tag
        id: meta
        run: |
          echo "image-tag=mothership-php8.2-joomla5.3.0" >> $GITHUB_OUTPUT

      - name: Cache Joomla Base Image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: ${{ steps.meta.outputs.image-tag }}
          restore-keys: mothership-

      - name: Build Joomla Base Image (if cache miss)
        run: |
          mkdir -p /tmp/docker-cache
          if [ ! -f /tmp/docker-cache/${{ steps.meta.outputs.image-tag }}.tar.gz ]; then
            docker build -t ${{ steps.meta.outputs.image-tag }} -f docker/Dockerfile .
            docker save ${{ steps.meta.outputs.image-tag }} | gzip > /tmp/docker-cache/${{ steps.meta.outputs.image-tag }}.tar.gz
          else
            echo "Docker base image cache hit, skipping build."
          fi

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite: [acceptance, functional, api, integration]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Joomla Base Image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-cache
          key: ${{ needs.build.outputs.image-tag }}
          restore-keys: mothership-

      - name: Load Cached Joomla Base Image
        run: |
          gunzip -c /tmp/docker-cache/${{ needs.build.outputs.image-tag }}.tar.gz | docker load

      - name: Rename .env.sample to .env
        run: mv ./tests/.env.sample ./tests/.env

      - name: Start Docker Services
        run: docker compose up -d

      - name: Wait for Database
        run: |
          echo "Waiting for Database..."
          until docker compose exec db mysqladmin ping -h "localhost" --silent; do
            echo "Still waiting for MySQL server to start..."
            sleep 5
          done
          echo "Database is ready."

      - name: Discover & Install Mothership
        run: |
          docker compose exec joomla bash -lc "\
            cd /var/www/html && \
            export HTTP_HOST=localhost:8080 && \
            php cli/joomla.php extension:discover --verbose && \
            php cli/joomla.php extension:discover:install --verbose"

      - name: Export Database
        run: |
          docker compose exec db sh -c "mysqldump -uroot -proot --no-tablespaces --skip-comments --extended-insert=false local" \
            | docker compose exec -T joomla sh -c "cat > /var/www/html/tests/_support/Data/db/dump.sql"

      - name: Run Codeception Tests (${{ matrix.suite }})
        run: |
          docker compose exec joomla sh -c "/var/www/html/vendor/bin/codecept run ${{ matrix.suite }} -d -f"

      - name: Teardown Docker
        if: always()
        run: docker compose down -v
